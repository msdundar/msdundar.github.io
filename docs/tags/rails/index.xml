<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rails on Blog of Serhat M. Dündar | Ruby, Rails, Golang, PostgreSQL, AWS, Security</title>
    <link>http://localhost:1313/tags/rails/</link>
    <description>Recent content in Rails on Blog of Serhat M. Dündar | Ruby, Rails, Golang, PostgreSQL, AWS, Security</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Nov 2018 19:24:20 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/rails/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rails and PostgreSQL: Types</title>
      <link>http://localhost:1313/posts/rails-and-postgresql-types/</link>
      <pubDate>Fri, 09 Nov 2018 19:24:20 +0200</pubDate>
      <guid>http://localhost:1313/posts/rails-and-postgresql-types/</guid>
      <description>&lt;p&gt;During &lt;a href=&#34;https://github.com/omu/nokul&#34;&gt;nokul&lt;/a&gt; we&amp;rsquo;ve heavily implemented PostgreSQL features into our&#xA;Rails application. Unfortunately, ActiveRecord doesn&amp;rsquo;t come with constraint support for PostgreSQL,&#xA;but &lt;a href=&#34;https://github.com/nullobject/rein&#34;&gt;rein&lt;/a&gt; does a fantastic job covering what&amp;rsquo;s missing in ActiveRecord.&#xA;We believe that, one shouldn&amp;rsquo;t rely on a web application, that is very prone for human-error, when it comes&#xA;to data integrity. Therefore our PostgreSQL tables included various constraints and limits.&lt;/p&gt;&#xA;&lt;p&gt;Below you will find a set of rules that we&amp;rsquo;ve investigated, implemented and battle tested with various types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rails and PostgreSQL: Constraints</title>
      <link>http://localhost:1313/posts/rails-and-postgresql-constraints/</link>
      <pubDate>Sat, 03 Nov 2018 15:24:20 +0200</pubDate>
      <guid>http://localhost:1313/posts/rails-and-postgresql-constraints/</guid>
      <description>&lt;p&gt;During &lt;a href=&#34;https://github.com/omu/nokul&#34;&gt;nokul&lt;/a&gt; we&amp;rsquo;ve heavily implemented PostgreSQL features into our&#xA;Rails application. Unfortunately, ActiveRecord doesn&amp;rsquo;t come with constraint support for PostgreSQL,&#xA;but &lt;a href=&#34;https://github.com/nullobject/rein&#34;&gt;rein&lt;/a&gt; does a fantastic job covering what&amp;rsquo;s missing in ActiveRecord.&#xA;We believe that, one shouldn&amp;rsquo;t rely on a web application, that is very prone for human-error, when it comes&#xA;to data integrity. Therefore our PostgreSQL tables included various constraints and limits.&lt;/p&gt;&#xA;&lt;p&gt;Below you will find a set of rules that we&amp;rsquo;ve investigated, implemented and battle tested with various types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Encrypting Sensitive Data With Rails</title>
      <link>http://localhost:1313/posts/encrypting-sensitive-data-with-rails/</link>
      <pubDate>Mon, 01 Oct 2018 09:33:06 +0200</pubDate>
      <guid>http://localhost:1313/posts/encrypting-sensitive-data-with-rails/</guid>
      <description>&lt;p&gt;The most recent versions (5.1 and 5.2) of Ruby on Rails has shipped with a new&#xA;feature named as &lt;a href=&#34;https://edgeguides.rubyonrails.org/security.html#custom-credentials&#34;&gt;encrypted credentials&lt;/a&gt; which replaces the &lt;code&gt;secrets.yml&lt;/code&gt;, and enables you to keep sensitive data in an&#xA;encrypted file named as &lt;code&gt;config/credentials.yml.enc&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;However, this feature only works with a single file that is&#xA;&lt;code&gt;config/credentials.yml.enc&lt;/code&gt;. Recently we needed to add some data in our&#xA;repository, which we wanted to keep as encrypted, but that also didn&amp;rsquo;t really&#xA;fit into the &lt;code&gt;credentials.yml.enc&lt;/code&gt; conceptually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rails Instantiated Fixtures</title>
      <link>http://localhost:1313/posts/rails-instantiated-fixtures/</link>
      <pubDate>Wed, 03 May 2017 18:52:34 +0200</pubDate>
      <guid>http://localhost:1313/posts/rails-instantiated-fixtures/</guid>
      <description>&lt;p&gt;Here is a sample Ruby on Rails fixture named as &lt;code&gt;newsletter&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;newsletter&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;foo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;message&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;first_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;foo&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;last_name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;bar&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;There are two popular ways to use this fixture in your Rails tests. The first one is directly calling the name of&#xA;fixture file, followed by a symbol stating the name of any individual fixture:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;NewsletterTest&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ActiveSupport&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TestCase&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  test &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a sample test&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert newsletters(&lt;span style=&#34;color:#e6db74&#34;&gt;:newsletter&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;valid?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;And the other one is assigning fixtures to an instance variable in the &lt;code&gt;setup&lt;/code&gt; block:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running Rake Tasks in a Loop</title>
      <link>http://localhost:1313/posts/running-rake-tasks-in-a-loop/</link>
      <pubDate>Mon, 03 Apr 2017 01:46:33 +0200</pubDate>
      <guid>http://localhost:1313/posts/running-rake-tasks-in-a-loop/</guid>
      <description>&lt;p&gt;Rake tasks in a loop, will only executed once if they are not &amp;ldquo;re-enabled&amp;rdquo;.&#xA;Take a look at this example:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;namespace &lt;span style=&#34;color:#e6db74&#34;&gt;:yoksis&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  desc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fetches all references&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  task &lt;span style=&#34;color:#e6db74&#34;&gt;:references&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mapping &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;get_instruction_language&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnitInstructionLanguage&amp;#39;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#e6db74&#34;&gt;get_instruction_type&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;UnitInstructionType&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mapping&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;each &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;action, klass&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#66d9ef&#34;&gt;Rake&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Task&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;yoksis:reference&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;].&lt;/span&gt;invoke(action, klass)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  desc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fetch an individual reference&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  task &lt;span style=&#34;color:#e6db74&#34;&gt;:reference&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;soap_method klass&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:environment&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;_, args&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    puts args&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:soap_method&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    puts args&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:klass&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When you run the &lt;code&gt;yoksis:references&lt;/code&gt; task, it will only print out&#xA;&lt;code&gt;{get_instruction_language: &#39;UnitInstructionLanguage&#39;}&lt;/code&gt; and will skip the&#xA;second item of the &lt;code&gt;mapping&lt;/code&gt; hash.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using has_many :through for Nested Relations in Rails</title>
      <link>http://localhost:1313/posts/using-has-many-through-for-nested-relations-in-rails/</link>
      <pubDate>Sat, 20 Aug 2016 21:19:04 +0200</pubDate>
      <guid>http://localhost:1313/posts/using-has-many-through-for-nested-relations-in-rails/</guid>
      <description>&lt;p&gt;&lt;code&gt;has_many :through&lt;/code&gt; is a useful association type of Rails. It&amp;rsquo;s mostly popular and often used as a join model for&#xA;many-to-many relations.&lt;/p&gt;&#xA;&lt;p&gt;However, &lt;code&gt;has_many :through&lt;/code&gt; is more than a simple join model, because it conducts INNER JOIN(s) on related models. We&#xA;can also take the advantage of this behaviour on nested &lt;code&gt;has_many&lt;/code&gt; relations. Lets imagine a scenario where we have a&#xA;nested &lt;code&gt;has_many&lt;/code&gt; structure as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Country&lt;/span&gt; (has_many &lt;span style=&#34;color:#e6db74&#34;&gt;:regions&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Region&lt;/span&gt; (has_many &lt;span style=&#34;color:#e6db74&#34;&gt;:cities&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;City&lt;/span&gt; (has_many &lt;span style=&#34;color:#e6db74&#34;&gt;:districts&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;District&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Models and tables of the structure:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
