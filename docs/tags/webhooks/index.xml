<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Webhooks on Blog of Serhat M. Dündar | Ruby, Rails, Golang, PostgreSQL, AWS, Security</title>
    <link>http://localhost:1313/tags/webhooks/</link>
    <description>Recent content in Webhooks on Blog of Serhat M. Dündar | Ruby, Rails, Golang, PostgreSQL, AWS, Security</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Sep 2022 20:10:16 +0200</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/webhooks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Securing Webhooks</title>
      <link>http://localhost:1313/posts/securing-webhooks/</link>
      <pubDate>Sun, 18 Sep 2022 20:10:16 +0200</pubDate>
      <guid>http://localhost:1313/posts/securing-webhooks/</guid>
      <description>&lt;p&gt;In this post, I will focus on the rationale behind some popular webhook security methods and will try to explain&#xA;them in simple terms.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-basics-risks-and-measures&#34;&gt;1. Basics Risks and Measures&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-webhooks-can-be-set-to-leak-data-silently&#34;&gt;1.1. Webhooks can be set to leak data silently&lt;/h3&gt;&#xA;&lt;p&gt;Let’s assume you are a webhook provider and an attacker compromises the credentials of one of your clients. If your&#xA;platform doesn’t notify users when a webhook is created or updated - the attacker can create a webhook silently and&#xA;start leaking data without alerting anyone. This silent tunnel will let the attacker stay in the system longer&#xA;undetected. Therefore:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
